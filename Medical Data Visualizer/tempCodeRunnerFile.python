import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

def load_data():
    """Load the medical examination data from the CSV file."""
    return pd.read_csv("medical_examination.csv")

def preprocess_data(df):
    """Preprocess the data by adding the 'overweight' column and normalizing data."""
    # Calculate BMI and add 'overweight' column
    df['overweight'] = ((df['weight'] / ((df['height'] / 100) ** 2)) > 25).astype(int)

    # Normalize 'cholesterol' and 'gluc' columns
    df['cholesterol'] = (df['cholesterol'] > 1).astype(int)
    df['gluc'] = (df['gluc'] > 1).astype(int)

    return df

def draw_cat_plot(df):
    """Create a categorical plot."""
    # Melt the dataframe to long format
    df_cat = pd.melt(
        df,
        id_vars=['cardio'],
        value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight']
    )

    # Group and reformat data
    df_cat = (
        df_cat
        .groupby(['cardio', 'variable', 'value'])
        .size()
        .reset_index(name='total')
    )

    # Draw the catplot
    fig = sns.catplot(
        x='variable', y='total', hue='value', col='cardio',
        data=df_cat, kind='bar', height=5, aspect=1
    ).fig

    return fig

def draw_heat_map(df):
    """Create a heat map."""
    # Clean the data
    df_heat = df[(df['ap_lo'] <= df['ap_hi']) &
                 (df['height'] >= df['height'].quantile(0.025)) &
                 (df['height'] <= df['height'].quantile(0.975)) &
                 (df['weight'] >= df['weight'].quantile(0.025)) &
                 (df['weight'] <= df['weight'].quantile(0.975))]

    # Calculate the correlation matrix
    corr = df_heat.corr()

    # Generate a mask for the upper triangle
    mask = np.triu(np.ones_like(corr, dtype=bool))

    # Set up the matplotlib figure
    fig, ax = plt.subplots(figsize=(12, 8))

    # Draw the heatmap
    sns.heatmap(
        corr, mask=mask, annot=True, fmt='.1f', cmap='coolwarm', square=True,
        cbar_kws={'shrink': 0.5}, ax=ax
    )

    return fig

if __name__ == "__main__":
    # Load and preprocess data
    df = load_data()
    df = preprocess_data(df)

    # Draw plots
    cat_plot_fig = draw_cat_plot(df)
    cat_plot_fig.savefig('catplot.png')

    heat_map_fig = draw_heat_map(df)
    heat_map_fig.savefig('heatmap.png')
